#Каждое из слов «разработка», «сокет», «декоратор» представить
#в буквенном формате и проверить тип и содержание соответствующих переменных.
#Затем с помощью онлайн-конвертера преобразовать
#в набор кодовых точек Unicode (НО НЕ В БАЙТЫ!!!)
#и также проверить тип и содержимое переменных.

s1='разработка'
s2='сокет'
s3='декоратор'
print(type(s1))
print(type(s2))
print(type(s3))
print (s1,s2,s3)
s1_u=u'\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430'
s2_u=u'\u0441\u043e\u043a\u0435\u0442'
s3_u=u'\u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440'
print(type(s1_u),type(s2_u),type(s3_u))
print(s1_u, s2_u, s3_u)

#Каждое из слов «class», «function», «method» записать в байтовом формате
#без преобразования в последовательность кодов
#не используя!!! методы encode и decode)
#и определить тип, содержимое и длину соответствующих переменных.

p1=b'class'
p2=b'function'
p3=b'method'
print(type(p1),type(p2),type(p3))
print(p1, p2, p3)


#Определить, какие из слов «attribute», «класс», «функция», «type»
#невозможно записать в байтовом типе с помощью маркировки b'' (без encode decode).

for s in ['attribute','класс','функция','type']:
    try:
        print(s,type(s),s.encode('ascii'), ' - encoding to bytes successful ')
    except:
        print(s,type(s),' - not valid input for bytes string')
        
        
#Преобразовать слова «разработка», «администрирование», «protocol»,
#«standard» из строкового представления в байтовое и выполнить
#обратное преобразование (используя методы encode и decode).

data = ['разработка', 'администрирование', 'protocol', 'standard']

for i in data:
    print(f'Переменная => {i}\n'
          f'В байтовом виде => {i.encode("utf8")}\n'
          f'Раскодированная обратно в строку  => {i.encode("utf8").decode()}\n')
        

#Выполнить пинг веб-ресурсов yandex.ru, youtube.com и
#преобразовать результаты из байтовового в строковый тип на кириллице.

import subprocess
for sites in ['yandex.ru','youtube.com']:
  args=['ping',sites]
  subproc_ping=subprocess.Popen(args,stdout=subprocess.PIPE)
  for line in subproc_ping.stdout:
      print(line.decode('cp866').encode('utf-8').decode('utf-8'))


